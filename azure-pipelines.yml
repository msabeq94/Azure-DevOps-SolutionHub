trigger:
- none
parameters:
- name: location
  displayName: "Azure region"
  type: string
  default: 'eastus'

- name: customer_client_id
  displayName: "Customer Client ID"
  type: string
  default: "14c278e4-bfb7-451a-8af2-40f0c1e7675f"

- name: customer_client_secret
  displayName: "Customer Client Secret"
  type: string
  default: "J-d8Q~vvfYol.6aJoA12mI_m9YjN3ab-vp5uecDO"
  
- name: customer_tenant_id
  displayName: "Customer Tenant ID"
  type: string
  default: "87431d80-c13c-4f97-8d52-4bd5ec6e617e"

- name: customer_subscription_id
  displayName: "Customer Subscription ID"
  type: string
  default: "f5980816-b478-413b-ae0b-5fb6d820a88f"
  
- name: default_domain_name
  displayName: "Default Domain Name"
  type: string
  default: "msabeqoutlook"

- name: customer_subscription_owner_first_name
  displayName: "Subscription Owner First Name"
  type: string
  default: "devops"
# - name: customer_subscription_owner_last_name 
#   displayName: "Subscription Owner Last Name"
#   type: string
#   default: "sh"

stages:
- stage: TerraformRun
  displayName: 'Terraform Run'
  pool: default
  jobs:
    - job: TerraformRun
      displayName: 'Terraform Run'
      steps:
        - script: |
            echo "Location: ${{ parameters.location }}"
            dateYMD=$(date +%Y%m%dT%H%M%S%NZ)
            workspace=my_workspace_${dateYMD}
            echo $dateYMD

            terraform workspace new $workspace
            terraform init

            terraform plan -var customer_subscription_id=${{ parameters.customer_subscription_id }} -var customer_client_id=${{ parameters.customer_client_id}} -var customer_tenant_id=${{ parameters.customer_tenant_id }} -var customer_client_secret=${{ parameters.customer_client_secret }} -var location=${{ parameters.location }} -var domain_name=${{parameters.default_domain_name}} -var customer_subscription_owner_first_name=${{parameters.customer_subscription_owner_first_name}} -var customer_subscription_owner_last_name=$(date +%S%3N)

            terraform apply --auto-approve -var customer_subscription_id=${{ parameters.customer_subscription_id }} -var customer_client_id=${{ parameters.customer_client_id}} -var customer_tenant_id=${{ parameters.customer_tenant_id }} -var customer_client_secret=${{ parameters.customer_client_secret }} -var location=${{ parameters.location }} -var domain_name=${{parameters.default_domain_name}} -var customer_subscription_owner_first_name=${{parameters.customer_subscription_owner_first_name}} -var customer_subscription_owner_last_name=$(date +%S%3N) 

            terraform output "customer_subscription_owner_password"
            terraform output "user_principal_name" 

            terraform output "customer_subscription_owner_password" | sed 's/^"//;s/"$//' > ${{ parameters.default_domain_name}}_pass.txt
            terraform output "user_principal_name" | sed 's/^"//;s/"$//' > ${{ parameters.default_domain_name}}_princ.txt


            owner_password=$(cat ${{ parameters.default_domain_name}}_pass.txt)
            owner_principal=$(cat ${{ parameters.default_domain_name}}_princ.txt)

            echo "##vso[task.setvariable variable=owner_password;isOutput=true]$owner_password"
            echo "##vso[task.setvariable variable=owner_principal;isOutput=true]$owner_principal"

            cat ${{ parameters.default_domain_name}}_princ.txt
            cat ${{ parameters.default_domain_name}}_pass.txt
       
- stage: savepassword
  dependsOn: TerraformRun
  pool: default
  jobs:
    - job: SavePASSToKeyVault
      displayName: "Save password to KeyVault"
      variables:
        owner_password: $[ dependencies.TerraformRun.outputs['TerraformRun.owner_password'] ]
        owner_principal: $[ dependencies.TerraformRun.outputs['TerraformRun.owner_principal'] ]
      steps:
        - script: |
                echo $(owner_password)
                echo $(owner_principal)
          # - task: AzureCLI@2
          #   inputs:
          #     azureSubscription: 'vf-cor-devops-pcr-access'
          #     scriptType: 'bash'
          #     scriptLocation: 'inlineScript'
          #     inlineScript: |
          #       echo $(owner_password)
          #       echo $(owner_principal)
          #       secret_pass_name=$(az keyvault secret set --vault-name 'vf-core-devops-pcr-kv' --name "${{parameters.default_domain_name}}-PASS$(date +%S%3N)" --value "$(owner_password)" --query "name" --output tsv)
          #       secret_princ_name=$(az keyvault secret set --vault-name 'vf-core-devops-pcr-kv' --name "${{parameters.default_domain_name}}-PRINC$(date +%S%3N)" --value "$(owner_principal)"  --query "name" --output tsv)
                

          # - task: DeleteFiles@1
          #   inputs:
          #     SourceFolder: '$(Pipeline.Workspace)'
          #     Contents: |
          #       ${{ parameters.default_domain_name}}_pass.txt
          #       ${{ parameters.default_domain_name}}_princ.txt'  
