trigger:
- none

parameters:
- name: Action
  displayName: Action
  type: string
  default: 'apply -auto-approve'
  values:
    - 'plan'
    - 'apply -auto-approve'
    - 'destroy -auto-approve'
  
- name: country_code
  displayName: country_code
  type: string
  values:
    - 'GB-Commercial'
    - 'GB-Official'
    - 'IT-Commercial'
    - 'IE-Commercial'
    - 'ES-Commercial'
    - 'PT-Commercial'
    - 'AL-Commercial'
- name: customer_domain_name
  displayName: "Customer Domain Name"
  type: string
  default: "msabeqoutlook"
- name: customer_subscription_owner_firstname
  displayName: "Customer Subscription Owner First Name"
  type: string
  default: " "
- name: customer_subscription_owner_lastname
  displayName: "Customer Subscription Owner Last Name"
  type: string
  default: " "
- name: ustomer_subscription_contributor_firstname
  displayName: "Customer Subscription Contributor First Name"
  type: string
  default: " "
- name: customer_subscription_contributor_lastname
  displayName: "Customer Subscription Contributor Last Name"
  type: string
  default: " "
- name: customer_security_contact_email
  displayName: "Customer Security Contact Email"
  type: string
  default: ""
- name: customer_service_health_contact_email
  displayName: "Customer Service Health Contact Email"
  type: string
  default: ""
- name: customer_budget_contact_email
  displayName: "Customer Budget Contact Email"
  type: string
  default: ""
- name: budgeted_amount
  displayName: "Budgeted Amount"
  type: number
  default: "0"
- name: vodafone_support_primary_L2_username
  displayName: "Vodafone Support Primary L2 Username"
  type: string
  default: " "
- name: vodafone_support_primary_L2_useremail
  displayName: "Vodafone Support Primary L2 User Email"
  type: string
  default: " "
- name: customer_tenant_id
  displayName: "Customer Tenant ID"
  type: string
  default: "87431d80-c13c-4f97-8d52-4bd5ec6e617e"
- name: customer_subscription_id
  displayName: "Customer Subscription ID"
  type: string
  default: "f5980816-b478-413b-ae0b-5fb6d820a88f"
- name: customer_client_id
  displayName: "Customer Client ID"
  type: string
  default: "14c278e4-bfb7-451a-8af2-40f0c1e7675f"
- name: customer_client_secret
  displayName: "Customer Client Secret"
  type: string
  default: "J-d8Q~vvfYol.6aJoA12mI_m9YjN3ab-vp5uecDO"
- name: customer_subscription_owner_first_name
  displayName: "Subscription Owner First Name"
  type: string
  default: "devops"

- name: location
  displayName: "Azure region"
  type: string
  default: 'eastus'

variables:
  action: ${{ parameters.Action }}

stages:
- stage: IntializingProviders
  condition: eq(variables.Action, 'apply -auto-approve')
  displayName: 'Initializing Providers'
  jobs:
    - job: 'InitializingProviders'
      displayName: 'Initializing Providers'
      pool: 'DevOps-Agents-VMS'
      steps:
        - script: |
            echo "Initializing Providers" 
            # az login --service-principal -u ${{parameters.customer_client_id}} -p ${{parameters.customer_client_secret}} --tenant ${{parameters.customer_tenant_id}}
            # az account set -s ${{parameters.customer_subscription_id}}
            # Rproviders=("Microsoft.Management" "Microsoft.KeyVault" "Microsoft.Network" "Microsoft.Advisor" "Microsoft.Storage" "Microsoft.OperationalInsights" "Microsoft.PolicyInsights" "Microsoft.Kusto" "Microsoft.App" "Microsoft.ManagedIdentity" "Microsoft.Security" "Microsoft.ADHybridHealthService" "microsoft.insights")
            # for Rprovider in "${Rproviders[@]}"; do
            #   az provider register --namespace $Rprovider
            # done
#             for Rprovider in "${Rproviders[@]}"; do
#               RegistrationState=$(az provider show --namespace $Rprovider --query 'registrationState' --output tsv)
#               while [ "$RegistrationState" != "Registered" ]; do
#                 sleep 5
#                 RegistrationState=$(az provider show --namespace $Rprovider --query 'registrationState' --output tsv)
#               done
#               echo "$Rprovider registered."
#             done
   
- stage: TerraformRun
  dependsOn: IntializingProviders
  displayName: 'Terraform Run'
  pool: 'DevOps-Agents-VMS'
  jobs:
  - job: ManualApprovalResourcesStep
    condition: eq(variables.Action, 'destroy -auto-approve')
    displayName: "Review and Approve Resources Cleanup"
    pool: server 
    steps:
      - task: ManualValidation@0
        inputs:
          notifyUsers: ""
          instructions: "Are you sure, you want to delete the configuration?"
  - job: TerraformJob
    displayName: 'Terraform Job'
    steps:
      - script: |
            # cd cmdb/customer
            sed -i "s/cststate/${{ parameters.customer_domain_name }}/g" main.tf
            cat main.tf
            
            terraform init
            terraform workspace select ${{parameters.customer_domain_name}} || terraform workspace new ${{parameters.customer_domain_name}} 
            dateYMD=$(date +%Y%m%dT%H%M%S%NZ)
          
            terraform  ${{ parameters.Action }} \
              -var customer_subscription_id=${{ parameters.customer_subscription_id }} \
              -var customer_client_id=${{ parameters.customer_client_id }} \
              -var customer_tenant_id=${{ parameters.customer_tenant_id }} \
              -var customer_client_secret=${{ parameters.customer_client_secret }} \
              -var location=${{ parameters.location }} \
              -var domain_name=${{ parameters.customer_domain_name }} \
              -var customer_subscription_owner_first_name=${{ parameters.customer_subscription_owner_first_name }} \
              -var customer_subscription_owner_last_name=$(date +%S%3N)

            # # Extract outputs
            # owner_password=$(terraform output -raw "customer_subscription_owner_password")
            # echo "Owner Password: $owner_password"
            # owner_principal=$(terraform output -raw "user_principal_name")
            # echo "Owner Principal: $owner_principal"

            # # Set the output variables
            # echo "##vso[task.setvariable variable=password;isOutput=true]$owner_password"
            # echo "##vso[task.setvariable variable=principal;isOutput=true]$owner_principal"
          

# - stage: savepassword
#   dependsOn: TerraformRun
#   pool: 'DevOps-Agents-VMS'
#   jobs:
#     - job: SavePASSToKeyVault
#       displayName: "Save password to KeyVault"
#       variables:
#         owner_password: $[ stageDependencies.TerraformRun.TerraformJob.outputs['setVariables.password'] ]
#         owner_principal: $[ stageDependencies.TerraformRun.TerraformJob.outputs['setVariables.principal'] ]
#       steps:
#         - script: |
#             echo "Owner Password: $(owner_password)"
#             echo "Owner Principal: $(owner_principal)"
#         - task: AzureCLI@2
#           inputs:
#             azureSubscription: 'vf-cor-devops-pcr-access'
#             scriptType: 'bash'
#             scriptLocation: 'inlineScript'
#             inlineScript: |
#               echo "Owner Password: $(owner_password)"
#               echo "Owner Principal: $(owner_principal)"

#               seconds=$(date +%S)
#               az keyvault secret set --vault-name 'vf-core-devops-pcr-kv' --name "${{ parameters.customer_domain_name }}-PASS-${seconds}" --value "$(owner_password)"
#               az keyvault secret set --vault-name 'vf-core-devops-pcr-kv' --name "${{ parameters.customer_domain_name }}-PRINC-${seconds}" --value "$(owner_principal)"
